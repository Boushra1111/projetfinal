pipeline {
    agent any
    
    tools {
        jdk 'jdk17'
    }
    
    environment {
        
        SCANNER_HOME= tool 'sonar-scanner'
    }

    stages {
        stage('Git checkout') {
            steps {
               git 'https://github.com/adildalaoui/projetfinal.git' 
            }
        }
        stage('Owasp') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ ', odcInstallation: 'DC'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
   
        stage('Sonarqube analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                      sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.url=http://192.168.1.143:9000/ -Dsonar.login=squ_74b1e61fa79dc770b435fcf1e2cd06d01b4f0870 -Dsonar.projectName=python-webapp \
                -Dsonar.java.binaries=. \
                -Dsonar.projectKey=python-webapp '''
                }
                
            }
        }
       stage('Download Docker ARM64') {
            steps {
                script {
                    // Téléchargement de Docker pour ARM64
                    sh '''
                    # Add Docker's official GPG key:
                      sudo apt-get update
                      sudo apt-get install ca-certificates curl
                      sudo install -m 0755 -d /etc/apt/keyrings
                      sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
                      sudo chmod a+r /etc/apt/keyrings/docker.asc

                    # Add the repository to Apt sources:
                    echo \
                    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
                    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                    sudo apt-get update
                    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
                    
                    '''
                }
            }
        }
        
        
        
        stage('Docker Build and Tag') {
            steps {
               script {
                   withDockerRegistry(credentialsId: 'docker-cred2', url: 'https://index.docker.io/v1/') {
                       sh 'docker build -t python-webapp:latest -f Dockerfile .'
                       sh ' docker tag python-webapp:latest adildal/python-webapp:latest'
                       sh 'docker push adildal/python-webapp:latest'
}
               }
            }
        }
        stage('Trigger cd pipeline') {
            steps {
               build job: 'cd_pipeline' , wait:true
            }
        }
}
}
